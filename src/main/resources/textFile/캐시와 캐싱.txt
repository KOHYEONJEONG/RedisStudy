## 캐시라는 단어는 Redis에서만 쓰이는 용어는 아디고 전반적인 개발 분야에서 통용돼서 쓰인다.

캐시(Cache)란?
- 원본 저장소보다 빠르게 가져올 수 있는 임시 데이터 저장소를 의미한다.
- 접근속도가 빠르다

[주된 목적]
데이터 접근 속도 개선
(데이터를 임시 저장하여 원본 저장소보다 빠르게 접근하고, 조회 성능을 높이는 것)

[캐시는 주변에서 사용하고 있다]
🔽레디스에서도 캐싱 기능이 있지만 브라우저에도 캐싱기능이 있다.
크롬
- 인터넷 사용 기록 삭제 > 캐시된 이미지 및 파일

🔽협업에서 아래와 같이 얘기하는 편이다.
"이 API는 응답 속도가 너무 느린데? 이 응답 데이터는 캐싱(Cashing) 해두고 쓰는 게 어때?"


----------------------------------------------------------------------------

# 캐싱 전략(한개만 사용하는게 아니라 여러 전략을 같이 사용가능하다)

1) Cache Aside 전략
- 캐시(Cache)에서 데이터를 확인하고(=레디스에 확인하고),없다면 DB를 통해 조회해오는 방식이다.
 + 데이터 응답 후 데이터를 캐시에(레디스) 저장한다.

예시1. 처음으로 게시판 서비스를 배포했다고 가정하고 'Cache Aside' 작동 방식을 이해해보자.
1. 처음 게시판 서비스를 배포했기 때문에 db와 레디스에는 아무런 데이터도 저장이 안 되어 있다.
2. 일부 사용자가 들어와 게시글 작성을 함으로써 데이터를 저장한다.
이 데이터는 db에 저장된다.(레디스에는 저장되지 않는다.)
3. 사용자가 데이터를 조회하려고 요청한다. 이 떄, DB로부터 바로 데이터 조회를 하기 전에 레디스에 있는지 먼저 확인한다.
4. 레디스에 데이터가 없는 걸 확인한 뒤에 db로부터 데이터를 조회해서 응담한다.
5. 💥데이터베이스로부터 조회한 데이터를 응답한 뒤에 레디스에도 데이터를 저장해둔다.
6. 다시 한 번 사용자가 데이터를 조회하려고 요청한다.
7. 레디스에 조회하고자 하는 데이터가 있는지 확인했더니, 데이터가 존재해서 레디스로부터 데이터를 바로 가져와버린다.

[총 정리]
* 무조건 먼저 레디스한테 물어본다. 아래 두작업을 순차대로 실행할 수도 있다.

* 캐시에 데이터가 있을 경우(=Cache Hit)
1. 데이터 요청(애플리케이션 -> 레디스)
2. 데이터 응답(레디스 -> 애플리케이션)

* 캐시에 데이터가 없을 경우(=Cache Miss)
1. 데이터 요청(애플리케이션 -> 레디스) : 바로 2번 실행
2. 데이터 요청(애플리케이션 -> db)
3. 데이터 응답(db -> 애플리케이션)
4. 캐시에 데이터 저장(애플리케이션 -> 레디스)

------------------------------------------------------------------------
2) Write Around 전략( 너무 간단하다 )
- 쓰기 작업(저장, 수정, 삭제)을 캐시에는 반영하지 않고, DB에만 반영하는 방식을 뜻한다.
- 조회할 때 레디스에 데이터가 없으면 데이터를 DB로부터 조회 후 레디스에 저장한다.
(데이터를 저장할 때 db에 저장하지 않고, db에만 저장하고, 조회한 값만 레디스에 저장한다.)

-------------------------------------------------
[한계도 있다]
캐시된 값을 사용하기 때문에 동기화가 되지 않을 수 있다..
캐시값 : 고현정
DB값 : 고양이

그래서 캐시할 데이터는 아래와 같은 조건이 적절하다.
- 자주 조회되는 데이터
- 잘 변하지 않는 데이터
- 실시간으로 정확하게 일치하지 않아도 되는 데이터

하지만
장기간 데이터가 일치하지 않는 것도 문제가 될 수 있다.
*동기화 : db의 데이터를 Redis에 저장되어 있는 데이터와 일치시키는걸 의미한다
이때 활용되는 기능이 ttl이다

또 캐시에 저장할 수 있는 공간이 비교적 작다.
이것도 TTL 기능(만료시간 설정 기능)을 활용하여 캐시의 공간을 효율적으로 쓸 수 있다.
왜냐면 자주 조회하지 않는 데이터는 만료 시간에 의해 데이터가 삭제되기 때문이다.
- 이러면 Cache Miss가 일어나게 되고 다시 DB값을 조회하여 캐시에 저장한다.